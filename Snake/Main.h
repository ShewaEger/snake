#pragma once
#include "Cell.cpp"
#include "Records.h"
#include "About.h"
#include "Rules.h"
#include "Lose.h"
namespace Snake {

	using namespace System;
	using namespace System::ComponentModel;
	using namespace System::Collections;
	using namespace System::Windows::Forms;
	using namespace System::Data;
	using namespace System::Drawing;

	/// <summary>
	/// Ñâîäêà äëÿ Main
	/// </summary>
	public ref class Main : public System::Windows::Forms::Form
	{
		int px = 10, py = 0;
	private: System::Windows::Forms::ToolStripMenuItem^  ğåêîğäûToolStripMenuItem;
	private: System::Windows::Forms::ToolStripMenuItem^  ïğàâèëàToolStripMenuItem;
	private: System::Windows::Forms::ToolStripMenuItem^  aboutToolStripMenuItem;
	private: System::Windows::Forms::ToolStripSeparator^  toolStripSeparator1;
	private: System::Windows::Forms::PictureBox^  pictureBox2;
	private: System::Windows::Forms::Timer^  time;





	private: System::Windows::Forms::ToolStripMenuItem^  íîâàÿÈãğàToolStripMenuItem;
	public:
		Main(void)
		{
			//Resources::ResourceManager^ rm = gcnew Resources::ResourceManager;
			InitializeComponent();
			// Èíèöèàëèçàöèÿ ïåğåìåííûõ
			g = pictureBox1->CreateGraphics(); // Ãäå ğèñîâàòü
			p = gcnew SolidBrush(Color::DarkOliveGreen); // öâåò çìåéêè
			pb1 = gcnew SolidBrush(pictureBox1->BackColor); // öâåò ïîëÿ
			pa = gcnew SolidBrush(Color::Red); // öâåò ÿáëîêà
			label1->Text = L"Score: 0";
			resources = (gcnew System::ComponentModel::ComponentResourceManager(Main::typeid)); // Ïåğåìåííàÿ íóæíà ÷òî áû âûòÿíóòü èç åêçåøíèêà ğåñóğñ
			//Âûêîâûğèâàş ğåñóğñ èç exeØíèêà
			snd = gcnew Media::SoundPlayer(cli::safe_cast<System::IO::Stream^>(resources->GetObject(L"sound")));
			snd->PlayLooping(); //Çàïóñêàş â öèêëå
			pictureBox2->Image = cli::safe_cast<System::Drawing::Image^>(resources->GetObject(L"sndOn"));
		}

	protected:
		/// <summary>
		/// Îñâîáîäèòü âñå èñïîëüçóåìûå ğåñóğñû.
		/// </summary>
		~Main()
		{
			if (components)
			{
				delete components;
			}
		}
	private: System::Windows::Forms::PictureBox^  pictureBox1;
	private: System::Windows::Forms::Label^  label1;
	private: System::Windows::Forms::MenuStrip^  menuStrip1;
	private: System::Windows::Forms::ToolStripMenuItem^  ôàéëToolStripMenuItem;

	private: System::Windows::Forms::ToolStripMenuItem^  âûõîäToolStripMenuItem;
	private: System::Windows::Forms::Timer^  gameLoop;


	private: System::ComponentModel::IContainer^  components;
	protected:

	private:
		/// <summary>
		/// Îáÿçàòåëüíàÿ ïåğåìåííàÿ êîíñòğóêòîğà.
		/// </summary>




#pragma region Windows Form Designer generated code
		/// <summary>
		/// Òğåáóåìûé ìåòîä äëÿ ïîääåğæêè êîíñòğóêòîğà — íå èçìåíÿéòå 
		/// ñîäåğæèìîå ıòîãî ìåòîäà ñ ïîìîùüş ğåäàêòîğà êîäà.
		/// </summary>
		void InitializeComponent(void)
		{
			this->components = (gcnew System::ComponentModel::Container());
			System::ComponentModel::ComponentResourceManager^  resources = (gcnew System::ComponentModel::ComponentResourceManager(Main::typeid));
			this->pictureBox1 = (gcnew System::Windows::Forms::PictureBox());
			this->label1 = (gcnew System::Windows::Forms::Label());
			this->menuStrip1 = (gcnew System::Windows::Forms::MenuStrip());
			this->ôàéëToolStripMenuItem = (gcnew System::Windows::Forms::ToolStripMenuItem());
			this->íîâàÿÈãğàToolStripMenuItem = (gcnew System::Windows::Forms::ToolStripMenuItem());
			this->ïğàâèëàToolStripMenuItem = (gcnew System::Windows::Forms::ToolStripMenuItem());
			this->ğåêîğäûToolStripMenuItem = (gcnew System::Windows::Forms::ToolStripMenuItem());
			this->aboutToolStripMenuItem = (gcnew System::Windows::Forms::ToolStripMenuItem());
			this->toolStripSeparator1 = (gcnew System::Windows::Forms::ToolStripSeparator());
			this->âûõîäToolStripMenuItem = (gcnew System::Windows::Forms::ToolStripMenuItem());
			this->gameLoop = (gcnew System::Windows::Forms::Timer(this->components));
			this->pictureBox2 = (gcnew System::Windows::Forms::PictureBox());
			this->time = (gcnew System::Windows::Forms::Timer(this->components));
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox1))->BeginInit();
			this->menuStrip1->SuspendLayout();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox2))->BeginInit();
			this->SuspendLayout();
			// 
			// pictureBox1
			// 
			this->pictureBox1->BackColor = System::Drawing::Color::Honeydew;
			this->pictureBox1->BackgroundImageLayout = System::Windows::Forms::ImageLayout::None;
			this->pictureBox1->Location = System::Drawing::Point(12, 63);
			this->pictureBox1->Name = L"pictureBox1";
			this->pictureBox1->Size = System::Drawing::Size(240, 300);
			this->pictureBox1->TabIndex = 0;
			this->pictureBox1->TabStop = false;
			this->pictureBox1->Paint += gcnew System::Windows::Forms::PaintEventHandler(this, &Main::pictureBox1_Paint);
			// 
			// label1
			// 
			this->label1->AutoSize = true;
			this->label1->Font = (gcnew System::Drawing::Font(L"Harrington", 18, System::Drawing::FontStyle::Italic, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->label1->ForeColor = System::Drawing::Color::Teal;
			this->label1->Location = System::Drawing::Point(12, 31);
			this->label1->Name = L"label1";
			this->label1->Size = System::Drawing::Size(80, 29);
			this->label1->TabIndex = 1;
			this->label1->Text = L"Score:";
			this->label1->Click += gcnew System::EventHandler(this, &Main::label1_Click);
			// 
			// menuStrip1
			// 
			this->menuStrip1->BackColor = System::Drawing::Color::SteelBlue;
			this->menuStrip1->Items->AddRange(gcnew cli::array< System::Windows::Forms::ToolStripItem^  >(1) { this->ôàéëToolStripMenuItem });
			this->menuStrip1->Location = System::Drawing::Point(0, 0);
			this->menuStrip1->Name = L"menuStrip1";
			this->menuStrip1->Size = System::Drawing::Size(264, 24);
			this->menuStrip1->TabIndex = 2;
			this->menuStrip1->Text = L"menuStrip1";
			// 
			// ôàéëToolStripMenuItem
			// 
			this->ôàéëToolStripMenuItem->DropDownItems->AddRange(gcnew cli::array< System::Windows::Forms::ToolStripItem^  >(6) {
				this->íîâàÿÈãğàToolStripMenuItem,
					this->ïğàâèëàToolStripMenuItem, this->ğåêîğäûToolStripMenuItem, this->aboutToolStripMenuItem, this->toolStripSeparator1, this->âûõîäToolStripMenuItem
			});
			this->ôàéëToolStripMenuItem->Name = L"ôàéëToolStripMenuItem";
			this->ôàéëToolStripMenuItem->Size = System::Drawing::Size(45, 20);
			this->ôàéëToolStripMenuItem->Text = L"Ôàéë";
			this->ôàéëToolStripMenuItem->Click += gcnew System::EventHandler(this, &Main::ôàéëToolStripMenuItem_Click);
			// 
			// íîâàÿÈãğàToolStripMenuItem
			// 
			this->íîâàÿÈãğàToolStripMenuItem->Name = L"íîâàÿÈãğàToolStripMenuItem";
			this->íîâàÿÈãğàToolStripMenuItem->Size = System::Drawing::Size(131, 22);
			this->íîâàÿÈãğàToolStripMenuItem->Text = L"Íîâàÿ èãğà";
			this->íîâàÿÈãğàToolStripMenuItem->Click += gcnew System::EventHandler(this, &Main::íîâàÿÈãğàToolStripMenuItem_Click);
			// 
			// ïğàâèëàToolStripMenuItem
			// 
			this->ïğàâèëàToolStripMenuItem->Name = L"ïğàâèëàToolStripMenuItem";
			this->ïğàâèëàToolStripMenuItem->Size = System::Drawing::Size(131, 22);
			this->ïğàâèëàToolStripMenuItem->Text = L"Ïğàâèëà";
			this->ïğàâèëàToolStripMenuItem->Click += gcnew System::EventHandler(this, &Main::ïğàâèëàToolStripMenuItem_Click);
			// 
			// ğåêîğäûToolStripMenuItem
			// 
			this->ğåêîğäûToolStripMenuItem->Name = L"ğåêîğäûToolStripMenuItem";
			this->ğåêîğäûToolStripMenuItem->Size = System::Drawing::Size(131, 22);
			this->ğåêîğäûToolStripMenuItem->Text = L"Ğåêîğäû";
			this->ğåêîğäûToolStripMenuItem->Click += gcnew System::EventHandler(this, &Main::ğåêîğäûToolStripMenuItem_Click);
			// 
			// aboutToolStripMenuItem
			// 
			this->aboutToolStripMenuItem->Name = L"aboutToolStripMenuItem";
			this->aboutToolStripMenuItem->Size = System::Drawing::Size(131, 22);
			this->aboutToolStripMenuItem->Text = L"About";
			this->aboutToolStripMenuItem->Click += gcnew System::EventHandler(this, &Main::aboutToolStripMenuItem_Click);
			// 
			// toolStripSeparator1
			// 
			this->toolStripSeparator1->Name = L"toolStripSeparator1";
			this->toolStripSeparator1->Size = System::Drawing::Size(128, 6);
			// 
			// âûõîäToolStripMenuItem
			// 
			this->âûõîäToolStripMenuItem->Name = L"âûõîäToolStripMenuItem";
			this->âûõîäToolStripMenuItem->Size = System::Drawing::Size(131, 22);
			this->âûõîäToolStripMenuItem->Text = L"Âûõîä";
			this->âûõîäToolStripMenuItem->Click += gcnew System::EventHandler(this, &Main::âûõîäToolStripMenuItem_Click);
			// 
			// gameLoop
			// 
			this->gameLoop->Enabled = true;
			this->gameLoop->Tick += gcnew System::EventHandler(this, &Main::gameLoop_Tick);
			// 
			// pictureBox2
			// 
			this->pictureBox2->BackColor = System::Drawing::Color::LightSteelBlue;
			this->pictureBox2->Location = System::Drawing::Point(228, 31);
			this->pictureBox2->Name = L"pictureBox2";
			this->pictureBox2->Size = System::Drawing::Size(24, 24);
			this->pictureBox2->TabIndex = 3;
			this->pictureBox2->TabStop = false;
			this->pictureBox2->Click += gcnew System::EventHandler(this, &Main::pictureBox2_Click);
			// 
			// time
			// 
			this->time->Interval = 1000;
			this->time->Tick += gcnew System::EventHandler(this, &Main::time_Tick);
			// 
			// Main
			// 
			this->AutoScaleDimensions = System::Drawing::SizeF(6, 13);
			this->AutoScaleMode = System::Windows::Forms::AutoScaleMode::Font;
			this->BackColor = System::Drawing::Color::LightSteelBlue;
			this->ClientSize = System::Drawing::Size(264, 373);
			this->Controls->Add(this->pictureBox2);
			this->Controls->Add(this->label1);
			this->Controls->Add(this->pictureBox1);
			this->Controls->Add(this->menuStrip1);
			this->FormBorderStyle = System::Windows::Forms::FormBorderStyle::FixedSingle;
			this->Icon = (cli::safe_cast<System::Drawing::Icon^>(resources->GetObject(L"$this.Icon")));
			this->KeyPreview = true;
			this->MainMenuStrip = this->menuStrip1;
			this->MaximizeBox = false;
			this->MinimizeBox = false;
			this->Name = L"Main";
			this->SizeGripStyle = System::Windows::Forms::SizeGripStyle::Hide;
			this->Text = L"Snake [00:00]";
			this->KeyDown += gcnew System::Windows::Forms::KeyEventHandler(this, &Main::Main_KeyDown);
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox1))->EndInit();
			this->menuStrip1->ResumeLayout(false);
			this->menuStrip1->PerformLayout();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox2))->EndInit();
			this->ResumeLayout(false);
			this->PerformLayout();

		}
#pragma endregion

	private: System::Void contextMenuStrip1_Opening(System::Object^  sender, System::ComponentModel::CancelEventArgs^  e) {
	}
	private: System::Void âûõîäToolStripMenuItem_Click(System::Object^  sender, System::EventArgs^  e) {
		this->Close();
	}

	private: bool Self(List &a) { // Ïğîâåğÿş íà ñòîëêíîâåíèÿ ñ ñàìèì ñîáîé
		Iter it(a);  // èòåğàòîğ äëÿ ñòğóêòóğû
		it.First(); 
		it.Next(); //óñòàíàâëèâàş íà âòîğîé ıëåìåíò
		for (; it.isNext(); it.Next()) {
			if (a.start->p.isIntersection(it.CurrItem())) break; // Åñëè ïåğåñåêëîñü, òî âûõîæó èç öèêëà
		}
		return &it.CurrItem() != &(a.end->p); // È âîçâğàùàş ğåçóëüòàò ñğàâíåíèÿ
	}
	private: Graphics^ g; //Âûíîøó âíå öèêëà âñå ñîçäàíèÿ îáúåêòîâ äëÿ áîëüøåé îïòèìèçàöèè
	private: SolidBrush^ p;//Ââåğõó óæå îáñóæäàëîñü
	private: SolidBrush^ pb1;
	private: SolidBrush^ pa;
	private: bool fTurn = false, fNewGame = true, fPaint = false; // íàçâàíèÿ ãîâîğÿò ñàìè çà ñåáÿ
	private: unsigned GameTime; 
	private: Media::SoundPlayer^ snd; //Îáúåêò, âîñïğîèçâîäÿùèé ìóçûêó
			 System::ComponentModel::ComponentResourceManager^  resources; // îáúåêò, êîòîğûé çíàåò î ğåñóğñàõ
			 void Paint(List &a, Cell &b) { // Âûçûâàåòñÿ êîñâåííî ïğè ïåğåğèñîâêå
				 Iter it(a);
				 if (a.isEmpty()) return; //Åñëè ñòğóêòóğà íå ïóñòàÿ
				 for (it.First(); it.isNext(); it.Next()) {
					 it.CurrItem().Draw(g, p); // îòáîğàæàåì çìåéêó è ÿáëîêî
				 }
				 b.Draw(g, pa);
			 }
	private: System::Void gameLoop_Tick(System::Object^  sender, System::EventArgs^  e) {
		static List snake;
		static Iter it(snake);
		static Cell apple, *tmp = NULL; //Âî èçáåæàíèå óòå÷åê ïàìÿòè ïîäáèë âñå âîò òàêèì êîñòûëåì
		static bool isApple;
		static unsigned score = 0;
		Random^ rnd = gcnew Random;
		if (fPaint) {
			fPaint = false; //Åñëè ñëó÷èëàñü ãëîáàëüíàÿ ïåğåğèñîâêà
			Paint(snake, apple);
		}
		if (fNewGame) { //Åñëè íîâàÿ èãğà
			time->Enabled = true; //çàïóñêàåì âğåìÿ
			GameTime = 0; //Óñòàíàâëèâàåì âğåìÿ â 0
			fNewGame = false; //ãîâîğèì, ÷òî òóò íå íîâàÿ èãğà
			it.Clear();							//×èùó ñòğóêòóğó
			g->Clear(pictureBox1->BackColor);	//÷èùó ïîëå
			isApple = false;					//Ãîâîğş, ÷òî ÿáëîêà åùå íåò
			score = 0;							// îáíóëÿş ñ÷åò
			label1->Text = L"Score: " + Convert::ToString(score);
			this->Text = "Snake [00:00]";
			px = 10; //óñòàíàâëèâàş ïğèğàùåíèå ïî x
			py = 0; //ïî ó
		}
		if (snake.isEmpty()) {			//Ïåğâàÿ èíèöèàëèçàöèÿ
			tmp = new Cell(0, 0);		//Äîáàâëÿş ïåğâûé ıëåìåíò
			snake.push_front(*tmp);		//Çàíîøó â ëèñò
			delete tmp;					//óäàëÿş âğåìåííûé ıëåìåíò
			tmp = new Cell(px, 0);		// àíàëîãè÷íî
			snake.push_front(*tmp);
			it.First().Draw(g, p);		//Ğèñóş èõ
			it.Next().Draw(g, p);
			isApple = false;			// ãîâîğş, ÷òî ÿáëî÷êà íå ñóùåñòâóåò
		}
		if (!isApple) { //Åñëè ÿáëîêà íå ñóùåñòâóåò
			while (1) {
				apple.Setsize(8); //Çàäàåì ğàçìåğ
				apple.Setx((rnd->Next() % ((pictureBox1->Size.Width)) / 10) * 10); //Óñòàíàâëèâàåì íîâûå êîîğäèíàòû
				apple.Sety((rnd->Next() % ((pictureBox1->Size.Height)) / 10) * 10);

				for (it.First(); it.isNext(); it.Next()) { // Ïğîâåğÿåì íå ïîïàëè ëè ìû íà çìåéêó
					if (it.CurrItem().isIntersection(apple)) break;
				}
				if (&it.CurrItem() == &(snake.end->p)) break; //Åñëè âåñü öèêë ïğîéäåí äî êîíöà, òî âñå íîğì
			}
			apple.Draw(g, pa); // Ğèñóş ÿáëîêî
			isApple = true; //Ãîâîğèì, ÷òî ÿáëîêî íà ïîëå
		}
		tmp = new Cell(it[0].Getx() + px, it[0].Gety() + py); //Ñîçäàåì íîâûé ñåãìåíò çìåéêè
		snake.push_front(*tmp);//äîáàâëÿåì åãî â ñòğóêòóğó
		delete tmp;
		//Äàëåå ğàçëè÷íûå ïğîâåğêè íà ñòîëêíîâåíèÿ
		if (Self(snake) || it[0].Getx() + 10 > pictureBox1->Size.Width || it[0].Gety() + 10 > pictureBox1->Size.Height || it[0].Gety() < 0 || it[0].Getx() < 0) {
			gameLoop->Enabled = false; //Âûêëş÷àåì èãğîâîé öèêë
			time->Enabled = false; //Âûêëş÷àåì ñ÷åò âğåìåíè
			Lose^ lose =gcnew Lose(score, GameTime); // Âûâîäèì îêíî ñ ïğèãëàøåíèåì ââåñòè èìÿ ïîëüçîâàòåëÿ
			lose->ShowDialog();
			//Âûâîäèì ñìåøíóş êàğòèíêó
			pictureBox1->BackgroundImage = cli::safe_cast<System::Drawing::Image^>(resources->GetObject(L"GameOver"));
			
			//÷èñòèì ñòğóêòóğó
			it.Clear();
			return;
		}
		if (!it[0].isIntersection(apple)) { // Åñëè íå ïîïàëè íà ÿáëîêî
			it.Last().Draw(g, pb1); // ïîñëåäíşş âåğøèíó ñòèğàåì 
			it.Prev(); // è óäàëÿåì
			snake.pop_back();
		}
		else {
			apple.Draw(g, pb1);//èíà÷å óáèğàåì ñ ïîëÿ ÿáëîêî
			it[0].Draw(g, p);//îòğèñîâóåì îáğàòíî âåğøèíó
			isApple = false;//ãîâîğèì, ÷òî ÿáëîêà íå ñóùåñòâóåò
			score += 10; //îáíîâëÿåì ğåçóëüòàò
			label1->Text = L"Score: " + Convert::ToString(score);
		}

		it.First().Draw(g, p); // Ğèñóåì ïåğâóş âåğøèíó
		fTurn = true;
	}
	private: System::Void Main_KeyDown(System::Object^  sender, System::Windows::Forms::KeyEventArgs^  e) {
		if (!fTurn) return;//Åñëè çìåéêà åùå íå ïîâåğíóëàñü, òî âûõîä èç ôóíêöèè
		switch (e->KeyCode) { 
		case Keys::Up: //ôîğìèğóåì ğàçëè÷íûå ïğèğàùåíèÿ
			if (py == 10) return;
			py = -10;
			px = 0;
			break;
		case Keys::Down:
			if (py == -10) return;
			py = 10;
			px = 0;
			break;
		case Keys::Right:
			if (px == -10) return;
			py = 0;
			px = 10;
			break;
		case Keys::Left:
			if (px == 10) return;
			py = 0;
			px = -10;
			break;
		case Keys::Space: // Ïî ïğîáåëó âûêëş÷àåì, èëè âêëş÷àåì èãğîâîé öèêë
			gameLoop->Enabled = !(gameLoop->Enabled);
			return;
		}
		fTurn = false; //çàïğåùàåì äàëüíåéøåå èçìåíåíèå ïğèğàùåíèé ïîêà ıòî âñå íå ïğèìåíèòñÿ â çìåéêå
					   
	}
	private: System::Void íîâàÿÈãğàToolStripMenuItem_Click(System::Object^  sender, System::EventArgs^  e) {
		gameLoop->Enabled = true; //Åñëè íîâàÿ èãğà, òî âêëş÷àåì èãğîâîé öèêë
		fNewGame = true; //Ñ ïîìîùüş ôëàãà îïîâåùàåì èãğîâîé öèêë, ÷òî íóæíî íà÷àòü íîâóş èãğó
	}
	private: System::Void pictureBox1_Paint(System::Object^  sender, System::Windows::Forms::PaintEventArgs^  e) {
		fPaint = true; //Åñëè ïğîèçîøëà ïåğåğèñîâêà
	}
	private: System::Void ğåêîğäûToolStripMenuItem_Click(System::Object^  sender, System::EventArgs^  e) {
		Records^ rcrd = gcnew Records(); //Ïîêàçàòü îêíî ñ ğåêîğäàìè
		rcrd->ShowDialog();
	}
	private: System::Void aboutToolStripMenuItem_Click(System::Object^  sender, System::EventArgs^  e) {
		About^ abt = gcnew About; //ïîêàçàòü îêíî îá àâòîğå
		abt->ShowDialog();
	}
	private: bool fPlaySnd = true; //Çàïóùåíà ìóçûêà, èëè íåò
	private: System::Void pictureBox2_Click(System::Object^  sender, System::EventArgs^  e) {
		if (fPlaySnd) { //åñëè äà, òî âûêëş÷àåì
			snd->Stop();
			//È ìåíÿåì êàğòèíêó
			pictureBox2->Image = cli::safe_cast<System::Drawing::Image^>(resources->GetObject(L"sndOff"));
		}
		else {//Èíà÷å âêëş÷àåì è ìåíÿåì êàğòèíêó
			snd->PlayLooping();
			pictureBox2->Image = cli::safe_cast<System::Drawing::Image^>(resources->GetObject(L"sndOn"));
		}
		fPlaySnd = !fPlaySnd;
	}
	private: System::Void ïğàâèëàToolStripMenuItem_Click(System::Object^  sender, System::EventArgs^  e) {
		Rules^ rl = gcnew Rules; //îòîáğàæàåò îêíî ñ ïğàâèëàìè
		rl->ShowDialog();
	}
	
	private: System::Void time_Tick(System::Object^  sender, System::EventArgs^  e) {
		GameTime++; // Ñ÷åò÷èê âğåìåíè â èãğå
		this->Text = L"Snake [" + (GameTime/60).ToString("D2") + ":" + (GameTime % 60).ToString("D2") + L"]";
	}
private: System::Void ôàéëToolStripMenuItem_Click(System::Object^  sender, System::EventArgs^  e) {
}
private: System::Void label1_Click(System::Object^  sender, System::EventArgs^  e) {
}
};
}
